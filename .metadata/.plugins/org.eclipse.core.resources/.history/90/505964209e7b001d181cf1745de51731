package Questions;

public class Largest_palindrome_string {
//	static String res="";
	
	public static void main(String[] str)
	{
		
		String s= "cbbd";
			String res= function(s,"",0,"",0);
			System.out.println(res);
			
		
	}

	private static String function(String s, String out, int index,String res,int max) {
		
		if(index==s.length())
		{
			if(isPalindrome(out))
			{
				System.out.println(out);
				 max= findMax(max, out.length());
				if( max < out.length())
				{
					System.out.println(max);
					 res= out;
					 max= out.length();
					
				}
			}
			return res;
		}
		
		// exclude wala call
		
		res= function(s,out,index+1,res,max);
		
		// Include call
		
		char ele= s.charAt(index);
		out= out+ele;
		res=  function(s, out,index+1,res,max);
		
		return res;
		
	}
	
private static int findMax(int max, int length) {
		// TODO Auto-generated method stub
	if(max >length)
		return max;
	else
		return length;
	}

private static boolean isPalindrome(String s1) {
		
		
		int i=0; 
		int j= s1.length()-1;
		
		while (i<j)
		{
			if(s1.charAt(i) != s1.charAt(j))
			{
				return false;
			}
			i=i+1;
			j=j-1;
			
		}	
		return true;
	}

}
