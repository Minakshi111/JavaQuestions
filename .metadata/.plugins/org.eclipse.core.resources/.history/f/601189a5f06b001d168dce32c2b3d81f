package Sorting;

import java.util.Scanner;

public class MergeSort_inversion_count {
	static int count=0;
public static void main(String[] str)
{
	Scanner sc= new Scanner(System.in);
	int n= sc.nextInt();
	
	int arr[]= new int[n];
	
	for ( int i=0; i<n;i++)
	{
		arr[i]= sc.nextInt();
	}
	
	
	// Implment Merge sort algorithm
	
	mergeSort(arr, 0 , n-1);
System.out.println("Sorted array");
	for( int i=0; i<n;i++)
	{
		System.out.println(arr[i]);
	}
	
	System.out.println("Count is : "+count);
	
}

private static void mergeSort(int[] arr, int s, int e) {
	
	int mid= (s+e)/2;
	if(s>=e)
	{
		return;
	}
	
	// left part ko sort kro pehle
	mergeSort(arr, s, mid);
	
	// right part ko sort kro
	mergeSort(arr, mid+1, e);
	
	// dono sorted array ko merge kr do
	
	merge(arr, s, e);
	
	
}

// Mering 2 sorted array

private static void merge(int[] arr, int s, int e) {
	
	while(s<=e)
	{
		
		
		
		
	}
	
	
	
}
}
